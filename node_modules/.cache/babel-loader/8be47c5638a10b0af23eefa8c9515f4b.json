{"ast":null,"code":"var _jsxFileName = \"/home/nearbye/labs/sem6/IO/DatahubIO/src/App.js\";\nimport \"./App.css\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Graphs from \"./components/graphs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      graphs: [{\n        name: \"Default-graph\",\n        data: \"Default-graph-data\"\n      }]\n    };\n\n    this.parseConfigFile = jsonData => {\n      let parsedJson = JSON.parse(jsonData);\n      console.log(parsedJson);\n      console.log(parsedJson.graphs[1]);\n      const newGraphs = [];\n\n      for (let i in parsedJson.graphs) newGraphs.push({\n        name: parsedJson.graphs[i].name,\n        data: parsedJson.graphs[i].data\n      });\n\n      this.setState({\n        graphs: newGraphs\n      });\n    };\n\n    this.onFileUpload = e => {\n      const files = e.target.files;\n      const reader = new FileReader();\n      reader.readAsText(files[0]);\n\n      reader.onload = e => {\n        this.parseConfigFile(e.target.result);\n      };\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NavBar, {\n        onFileUpload: this.onFileUpload\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Graphs, {\n        graphs: this.state.graphs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/nearbye/labs/sem6/IO/DatahubIO/src/App.js"],"names":["React","Component","NavBar","Graphs","App","state","graphs","name","data","parseConfigFile","jsonData","parsedJson","JSON","parse","console","log","newGraphs","i","push","setState","onFileUpload","e","files","target","reader","FileReader","readAsText","onload","result","render"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;;AAEA,MAAMC,GAAN,SAAkBH,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BI,KAD0B,GAClB;AACNC,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,IAAI,EAAE,eAAR;AAAyBC,QAAAA,IAAI,EAAE;AAA/B,OAAD;AADF,KADkB;;AAAA,SAK1BC,eAL0B,GAKPC,QAAD,IAAc;AAC9B,UAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWH,QAAX,CAAjB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAZ;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAYJ,UAAU,CAACL,MAAX,CAAkB,CAAlB,CAAZ;AACA,YAAMU,SAAS,GAAG,EAAlB;;AACA,WAAK,IAAIC,CAAT,IAAcN,UAAU,CAACL,MAAzB,EACEU,SAAS,CAACE,IAAV,CAAe;AACbX,QAAAA,IAAI,EAAEI,UAAU,CAACL,MAAX,CAAkBW,CAAlB,EAAqBV,IADd;AAEbC,QAAAA,IAAI,EAAEG,UAAU,CAACL,MAAX,CAAkBW,CAAlB,EAAqBT;AAFd,OAAf;;AAKF,WAAKW,QAAL,CAAc;AAAEb,QAAAA,MAAM,EAAEU;AAAV,OAAd;AACD,KAjByB;;AAAA,SAmB1BI,YAnB0B,GAmBVC,CAAD,IAAO;AACpB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,YAAME,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,MAAAA,MAAM,CAACE,UAAP,CAAkBJ,KAAK,CAAC,CAAD,CAAvB;;AACAE,MAAAA,MAAM,CAACG,MAAP,GAAiBN,CAAD,IAAO;AACrB,aAAKZ,eAAL,CAAqBY,CAAC,CAACE,MAAF,CAASK,MAA9B;AACD,OAFD;AAGD,KA1ByB;AAAA;;AA4B1BC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,YAAY,EAAE,KAAKT;AAA3B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,KAAKf,KAAL,CAAWC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAMD;;AAnCyB;;AAsC5B,eAAeF,GAAf","sourcesContent":["import \"./App.css\";\nimport React, { Component } from \"react\";\nimport NavBar from \"./components/navbar\";\nimport Graphs from \"./components/graphs\";\n\nclass App extends Component {\n  state = {\n    graphs: [{ name: \"Default-graph\", data: \"Default-graph-data\" }],\n  };\n\n  parseConfigFile = (jsonData) => {\n    let parsedJson = JSON.parse(jsonData);\n    console.log(parsedJson);\n    console.log(parsedJson.graphs[1]);\n    const newGraphs = [];\n    for (let i in parsedJson.graphs)\n      newGraphs.push({\n        name: parsedJson.graphs[i].name,\n        data: parsedJson.graphs[i].data,\n      });\n\n    this.setState({ graphs: newGraphs });\n  };\n\n  onFileUpload = (e) => {\n    const files = e.target.files;\n    const reader = new FileReader();\n    reader.readAsText(files[0]);\n    reader.onload = (e) => {\n      this.parseConfigFile(e.target.result);\n    };\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <NavBar onFileUpload={this.onFileUpload}></NavBar>\n        <Graphs graphs={this.state.graphs}></Graphs>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}